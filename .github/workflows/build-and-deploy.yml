name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install Dependencies
        run: |
          cd frontend
          npm ci

      - name: Run Linting
        run: |
          cd frontend
          npm run lint

      - name: Build Project
        id: build
        run: |
          cd frontend
          npm run build
        continue-on-error: true

      - name: Check Build Status
        if: steps.build.outcome == 'failure'
        run: |
          echo "Build failed, creating failed deployment branch"
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

          # Create or update failed-deployments branch
          git checkout -B failed-deployments || git checkout failed-deployments
          git add .
          git commit -m "Failed build: $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin failed-deployments --force

          # Create a deployment issue
          gh issue create \
            --title "Build Failed: $(date +'%Y-%m-%d %H:%M:%S')" \
            --body "Build failed for commit $(git rev-parse HEAD). Check the [workflow run](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}) for details."

      - name: Deploy to Production
        if: steps.build.outcome == 'success' && github.ref == 'refs/heads/main'
        run: |
          echo "Build successful, proceeding with deployment"
      - name: Notify Success
        if: steps.build.outcome == 'success' && github.ref == 'refs/heads/main'
        run: |
          echo "Deployment successful"

  security-scan:
    needs: build-and-test
    if: steps.build.outcome == 'success'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Check for Vulnerabilities
        if: failure()
        run: |
          echo "Security scan failed, creating security issue"
          gh issue create \
            --title "Security Scan Failed: $(date +'%Y-%m-%d %H:%M:%S')" \
            --body "Security scan failed for commit $(git rev-parse HEAD). Check the [workflow run](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}) for details."

  post-deployment:
    needs: [build-and-test, security-scan]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Update Deployment Status
        run: |
          if [ "${{ needs.build-and-test.result }}" == "success" ] && [ "${{ needs.security-scan.result }}" == "success" ]; then
            echo "All checks passed"
            # Add your success status update steps here
          else
            echo "Some checks failed"
            # Add your failure status update steps here
          fi
